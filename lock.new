-- Gui to Lua
-- Version: 3.2

-- Instances:

local lockexe = Instance.new("ScreenGui")

--Properties:

lockexe.Name = "lock.exe"
lockexe.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
lockexe.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Scripts:

local function GQMW_fake_script() -- lockexe.LocalScript 
	local script = Instance.new('LocalScript', lockexe)

	local Players = game:GetService("Players")
	local Player = Players.LocalPlayer
	local RunService = game:GetService("RunService")
	local Mouse = Player:GetMouse()
	
	local lockKey
	local targetPartName
	local target
	local highlight
	
	-- Sounds
	local keySound = Instance.new("Sound")
	keySound.SoundId = "rbxassetid://111174530730534"
	keySound.Volume = 0.2
	keySound.Parent = Player:WaitForChild("PlayerGui")
	
	local lockSound = Instance.new("Sound")
	lockSound.SoundId = "rbxassetid://86220592770005"
	lockSound.Volume = 0.1
	lockSound.Parent = Player:WaitForChild("PlayerGui")
	
	-- Rainbow colors
	local rainbowColors = {
		Color3.fromRGB(255,0,0), Color3.fromRGB(255,127,0),
		Color3.fromRGB(255,255,0), Color3.fromRGB(0,255,0),
		Color3.fromRGB(0,0,255), Color3.fromRGB(75,0,130),
		Color3.fromRGB(148,0,211)
	}
	local colorIndex = 1
	local colorStep = 0
	
	-- Notification helper
	local function notify(title, text, icon)
		pcall(function()
			game.StarterGui:SetCore("SendNotification", {
				Title = title,
				Text = text,
				Duration = 5,
				Icon = icon or ""
			})
		end)
	end
	
	-- Highlight functions
	local function startHighlight(char)
		if highlight then highlight:Destroy() end
		highlight = Instance.new("Highlight")
		highlight.Adornee = char
		highlight.FillTransparency = 1
		highlight.OutlineTransparency = 0
		highlight.OutlineColor = rainbowColors[1]
		highlight.Parent = char
	end
	
	local function removeHighlight()
		if highlight then
			highlight:Destroy()
			highlight = nil
		end
	end
	
	local function updateRainbow()
		if highlight then
			colorStep = colorStep + 0.01
			if colorStep >= 1 then
				colorStep = 0
				colorIndex = colorIndex + 1
				if colorIndex > #rainbowColors then colorIndex = 1 end
			end
			local nextIndex = colorIndex + 1
			if nextIndex > #rainbowColors then nextIndex = 1 end
			highlight.OutlineColor = rainbowColors[colorIndex]:Lerp(rainbowColors[nextIndex], colorStep)
		end
	end
	
	-- Get torso/head for R6/R15
	local function getTorso(char)
		return char:FindFirstChild("UpperTorso") or char:FindFirstChild("Torso")
	end
	
	-- Lock key setup
	local keyChosen, firstPressKey, partChosen = false, nil, false
	
	-- Main key handler
	Mouse.KeyDown:Connect(function(key)
		-- Choose lock key
		if not keyChosen then
			if not firstPressKey then
				firstPressKey = key
				notify("Lock System", "Press "..key.." again to confirm")
			elseif key == firstPressKey then
				keyChosen = true
				lockKey = key
				keySound:Play()
				notify("Lock System", "Lock Key confirmed! Loaded...")
				notify("Lock System", "Press H for Head or T for Torso")
			else
				firstPressKey = key
				notify("Lock System", "Press "..key.." again to confirm")
			end
			return
		end
	
		-- Choose head or torso
		if keyChosen and not partChosen then
			if key:lower() == "h" then
				targetPartName = "Head"
				partChosen = true
				notify("Lock System", "Target part set to Head")
			elseif key:lower() == "t" then
				targetPartName = "Torso"
				partChosen = true
				notify("Target part set to Torso")
			end
			return
		end
	
		-- Toggle lock/unlock
		if keyChosen and partChosen and key == lockKey then
			if target then
				notify("Lock System", "Unlocked from "..target.Name)
				removeHighlight()
				target = nil
			else
				-- Lock to closest player
				local closestDist = math.huge
				local newTarget
				for _, plr in pairs(Players:GetPlayers()) do
					if plr ~= Player and plr.Character then
						local part = targetPartName == "Head" and plr.Character:FindFirstChild("Head") or getTorso(plr.Character)
						if part then
							local dist = (part.Position - Player.Character.HumanoidRootPart.Position).Magnitude
							if dist < closestDist then
								closestDist = dist
								newTarget = plr
							end
						end
					end
				end
	
				if newTarget then
					target = newTarget
					startHighlight(target.Character)
					lockSound:Play()
	
					-- Get profile picture
					local thumbType = Enum.ThumbnailType.HeadShot
					local thumbSize = Enum.ThumbnailSize.Size100x100
					local thumbUrl, isReady = Players:GetUserThumbnailAsync(target.UserId, thumbType, thumbSize)
	
					-- Calculate time played in hours
					local timePlayed = math.floor(target.AccountAge / 24) -- approximate as days/24 hours
	
					-- Send notification
					notify(
						"Target: "..target.Name,
						"DisplayName: "..target.DisplayName.." | Time Played: "..timePlayed.." hrs",
						thumbUrl
					)
				end
			end
		end
	end)
	
	-- Camera follow + rainbow
	RunService.RenderStepped:Connect(function()
		updateRainbow()
		if target and target.Character and target.Character:FindFirstChild(targetPartName) then
			local part = target.Character:FindFirstChild(targetPartName)
			if part then
				workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, part.Position)
			end
		end
	end)
	
	-- Reset command
	Player.Chatted:Connect(function(msg)
		if msg:lower() == "/e reset" or msg:lower() == "/reset" then
			removeHighlight()
			target = nil
			keyChosen, firstPressKey, partChosen = false, nil, false
			lockKey = nil
			targetPartName = nil
			notify("Lock System", "System reset. Press a key twice to set new lock key.")
		end
	end)
	
end
coroutine.wrap(GQMW_fake_script)()
