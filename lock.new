-- Gui to Lua
-- Version: 3.2

-- Instances:

local lockexe = Instance.new("ScreenGui")

--Properties:

lockexe.Name = "lock.exe"
lockexe.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
lockexe.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Scripts:

local function KMRKGZB_fake_script() -- lockexe.LocalScript 
	local script = Instance.new('LocalScript', lockexe)

	local Players = game:GetService("Players")
	local RunService = game:GetService("RunService")
	local Player = Players.LocalPlayer
	local Mouse = Player:GetMouse()
	
	local lockKey = nil
	local targetPartName = nil
	local target = nil
	local highlight = nil
	
	-- Sounds
	local keySound = Instance.new("Sound")
	keySound.SoundId = "rbxassetid://111174530730534"
	keySound.Volume = 0.2
	keySound.Parent = Player:WaitForChild("PlayerGui")
	
	local lockSound = Instance.new("Sound")
	lockSound.SoundId = "rbxassetid://86220592770005"
	lockSound.Volume = 0.1
	lockSound.Parent = Player:WaitForChild("PlayerGui")
	
	-- Notifications
	local function notify(title, text)
		pcall(function()
			game.StarterGui:SetCore("SendNotification", {
				Title = title;
				Text = text;
				Duration = 5
			})
		end)
	end
	
	-- Step 1: Choose Lock Key (double press)
	notify("Lock System", "Press your desired key twice to confirm")
	local keyChosen = false
	local firstPressKey = nil
	local confirmPressed = false
	
	Mouse.KeyDown:Connect(function(key)
		if not keyChosen then
			if not firstPressKey then
				firstPressKey = key
				notify("Lock System", "Press "..key.." again to confirm")
			elseif key == firstPressKey then
				confirmPressed = true
				lockKey = key
				keyChosen = true
				keySound:Play()
				notify("Lock System", "Lock Key set: "..lockKey.." Starting in 1 second")
			else
				firstPressKey = key
				notify("Lock System", "Press "..key.." again to confirm")
			end
		end
	end)
	
	-- Wait 1 second before starting
	local startTime = tick()
	RunService.RenderStepped:Connect(function()
		if keyChosen and confirmPressed and tick() - startTime >= 1 then
			confirmPressed = false
			notify("Lock System", "Choose target part: H for Head, T for Torso")
		end
	end)
	
	-- Step 2: Choose Head or Torso
	local partChosen = false
	Mouse.KeyDown:Connect(function(key)
		if keyChosen and not partChosen and not confirmPressed then
			if key:lower() == "h" then
				targetPartName = "Head"
				partChosen = true
				notify("Lock System", "Target part set to Head")
			elseif key:lower() == "t" then
				targetPartName = "Torso"
				partChosen = true
				notify("Lock System", "Target part set to Torso")
			end
		end
	end)
	
	-- Rainbow outline highlight
	local rainbowColors = {
		Color3.fromRGB(255,0,0), Color3.fromRGB(255,127,0),
		Color3.fromRGB(255,255,0), Color3.fromRGB(0,255,0),
		Color3.fromRGB(0,0,255), Color3.fromRGB(75,0,130),
		Color3.fromRGB(148,0,211)
	}
	local colorIndex = 1
	local colorStep = 0
	
	local function startHighlight(char)
		if highlight then highlight:Destroy() end
		highlight = Instance.new("Highlight")
		highlight.Adornee = char
		highlight.FillTransparency = 1 -- no fill
		highlight.OutlineTransparency = 0
		highlight.OutlineColor = rainbowColors[1]
		highlight.Parent = char
	end
	
	local function updateRainbow()
		if highlight then
			colorStep = colorStep + 0.01
			if colorStep >= 1 then
				colorStep = 0
				colorIndex = colorIndex + 1
				if colorIndex > #rainbowColors then colorIndex = 1 end
			end
			local nextIndex = colorIndex + 1
			if nextIndex > #rainbowColors then nextIndex = 1 end
			highlight.OutlineColor = rainbowColors[colorIndex]:Lerp(rainbowColors[nextIndex], colorStep)
		end
	end
	
	-- R6/R15 torso getter
	local function getTorso(char)
		if char:FindFirstChild("UpperTorso") then
			return char.UpperTorso
		elseif char:FindFirstChild("Torso") then
			return char.Torso
		end
		return nil
	end
	
	-- Step 3: Lock onto player (single press)
	Mouse.KeyDown:Connect(function(key)
		if key == lockKey and partChosen and not confirmPressed then
			local closestDistance = math.huge
			target = nil
	
			for _, plr in pairs(Players:GetPlayers()) do
				if plr ~= Player and plr.Character then
					local part
					if targetPartName == "Head" then
						part = plr.Character:FindFirstChild("Head")
					else
						part = getTorso(plr.Character)
					end
	
					if part then
						local distance = (part.Position - Player.Character.HumanoidRootPart.Position).Magnitude
						if distance < closestDistance then
							closestDistance = distance
							target = plr
						end
					end
				end
			end
	
			if target then
				notify("Lock System", "Target Set: "..target.Name)
				lockSound:Play()
				startHighlight(target.Character)
			end
		end
	end)
	
	-- Camera/mouse follow
	RunService.RenderStepped:Connect(function()
		updateRainbow()
		if target and target.Character and target.Character:FindFirstChild(targetPartName) then
			local part = target.Character:FindFirstChild(targetPartName)
			if part then
				local cam = workspace.CurrentCamera
				cam.CFrame = CFrame.new(cam.CFrame.Position, part.Position)
			end
		end
	end)
	
end
coroutine.wrap(KMRKGZB_fake_script)()
